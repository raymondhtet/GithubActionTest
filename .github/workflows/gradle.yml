# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions: write-all

jobs:
  build_and_test:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Build with Gradle
        uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
        with:
          arguments: build

  sonar:
    needs: build_and_test
    name: Analyze with SonarCloud
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew build sonar --info

      - name: Get SonarCloud quality gate status
        run: |
          STATUS=$(curl -s -u "${{ secrets.SONAR_TOKEN }}": "https://sonarcloud.io/api/qualitygates/project_status?projectKey=raymondhtet_GithubActionTest" | jq -r .projectStatus.status)
          echo "Quality gate status is $STATUS"
          if [[ "$STATUS" != "OK" ]]; then
          echo "Quality gate failed"
            exit 1
            runs-on: ubuntu-latest
            steps:
            - name: Cancel current job
              uses: styfle/cancel-workflow-action@0.8.0
              with:
                access_token: ${{ secrets.PAT }}
                workflow_id: ${{ github.workflow }}
                run_id: ${{ github.run_id }}
          fi      

      - name: Upload Unit Test Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: unit-test-artifact
          path: |
            build/reports/tests/                  

      - name: Upload Code Coverage Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: code-coverage-artifact
          path: |
            build/reports/jacoco/test/html/

      - name: Upload SonarCloud Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: sonar-artifact
          path: |            
            build/sonar/report-task.txt

  zap_scan:
    needs: sonar
    runs-on: ubuntu-latest
    name: Zap Scan
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: main

      - name: ZAP Scan
        uses: zaproxy/action-full-scan@v0.4.0
        with:
          target: 'http://recycler-service-1183649220.ap-southeast-1.elb.amazonaws.com/'
